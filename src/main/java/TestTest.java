// Generated by Selenium IDE

import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Action;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.util.*;

public class TestTest {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    Integer recodNum = 30;

    @Before
    public void setUp() {
        ChromeOptions options = new ChromeOptions();
        options.addArguments("--no-sandbox", "--test-type", "--headless", "--disable-gpu");
        DesiredCapabilities capabilities = DesiredCapabilities.chrome();
        capabilities.setCapability(ChromeOptions.CAPABILITY, options);
        capabilities.setJavascriptEnabled(true);

        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    public String waitForWindow(int timeout) {
        try {
            Thread.sleep(timeout);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        Set<String> whNow = driver.getWindowHandles();
        Set<String> whThen = (Set<String>) vars.get("window_handles");
        if (whNow.size() > whThen.size()) {
            whNow.removeAll(whThen);
        }
        return whNow.iterator().next();
    }

    @Test
    public void test() {

        for (int i = 1; i <= recodNum; i++) {

            driver.get("https://zh.lianjia.com/");
            driver.manage().window().setSize(new Dimension(1367, 807));
            vars.put("window_handles", driver.getWindowHandles());
            driver.findElement(By.linkText("二手房")).click();
            vars.put("win4910", waitForWindow(2000));
            driver.switchTo().window(vars.get("win4910").toString());
            driver.findElement(By.cssSelector(".typeList > li:nth-child(3) > a")).click();
//            driver.findElement(By.linkText("东城")).click();
            vars.put("window_handles", driver.getWindowHandles());
            driver.findElement(By.cssSelector("body > div.content > div.leftContent > ul > li:nth-child(" + i + ") > div.info > div.title > a")).click();

            vars.put("win4041", waitForWindow(2000));

            driver.switchTo().window(vars.get("win4041").toString());
            {
                WebElement element = driver.findElement(By.cssSelector(".xiaoquInfoItem:nth-child(7) > .xiaoquInfoContent"));
                Actions builder = new Actions(driver);
                builder.moveToElement(element).clickAndHold().perform();
            }
            {
                WebElement element = driver.findElement(By.cssSelector(".xiaoquInfoItem:nth-child(7) > .xiaoquInfoContent"));
                Actions builder = new Actions(driver);
                builder.moveToElement(element).perform();
            }
            {
                WebElement element = driver.findElement(By.cssSelector(".xiaoquInfoItem:nth-child(7) > .xiaoquInfoContent"));
                Actions builder = new Actions(driver);
                builder.moveToElement(element).release().perform();
            }
            driver.findElement(By.cssSelector(".xiaoquInfoItem:nth-child(7) > .xiaoquInfoContent")).click();
            driver.findElement(By.cssSelector(".xiaoquInfoItem:nth-child(7) > .xiaoquInfoContent")).click();
            driver.findElement(By.cssSelector(".xiaoquInfoItem:nth-child(7) > .xiaoquInfoContent")).click();
            {
                WebElement element = driver.findElement(By.cssSelector(".xiaoquInfoItem:nth-child(1) > .xiaoquInfoContent"));
                Actions builder = new Actions(driver);
                builder.doubleClick(element).perform();
            }
            String page = driver.getPageSource();
            String houseNum = page.split("房屋总数</span><span class=\"xiaoquInfoContent\">")[1].split("</span></div><div class=\"xiaoquInfoItem\"><")[0];
            String city = page.split("city_name: ")[1].split("channel: 'xiaoqu',")[0].split("'")[1];
            String communityName = page.split("<h1 class=\"detailTitle\">")[1].split("</h1><div class=\"detailDesc\">")[0];


            driver.findElement(By.cssSelector("#goodSell > div > a")).click();

            String saledNum = driver.getPageSource().split("<div class=\"agentCardDetailInfo\">")[1].split("</div>")[0];

            System.out.println(city + " " + communityName + " " + houseNum + " " + saledNum);


        }

        driver.quit();
    }
}
